buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
        nebulaVersion = '5.1.2'
        cucumberVersion = '1.2.5'
        wireMockVersion = '2.19.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.netflix.nebula:nebula-project-plugin:${nebulaVersion}"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "nebula.facet"
apply plugin: 'docker'

group = 'com.guga.lab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.RC1'

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile("info.cukes:cucumber-java8:${cucumberVersion}")
    testCompile("info.cukes:cucumber-junit:${cucumberVersion}")
    testCompile("info.cukes:cucumber-spring:${cucumberVersion}")
    testCompile "com.github.tomakehurst:wiremock:${wireMockVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootRun {
    systemProperties = System.properties
}

facets {
    integTest {
        parentSourceSet = "test"
        testTaskName = "integrationTest"
        includeInCheckLifecycle = false
    }
}

task buildDocker (type:Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}